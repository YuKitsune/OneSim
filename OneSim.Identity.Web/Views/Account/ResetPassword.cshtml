@using Microsoft.AspNetCore.Mvc.ModelBinding
@using OneSim.Identity.Web
@using OneSim.Identity.Web.Controllers
@model OneSim.Identity.Web.Models.ViewModels.Account.ResetPasswordViewModel
@{
    ViewData["Title"] = "Reset Password";
    Layout = "~/Views/Shared/_SimpleLayout.cshtml";
    List<ModelError> errors = Utils.GetModelErrors(ViewData).ToList();
}

<form id="forgotPasswordForm" class="ui large form @(errors.Any() ? "error" : string.Empty)" asp-action="@nameof(AccountController.ResetPassword)" asp-controller="@Utils.GetControllerName(nameof(AccountController))">
    <div class="ui stacked segment">

        @* Validation message *@
        <div class="ui error message" style="padding: 5px;">
            @Html.ValidationSummary()
        </div>

        <p>Reset your password.</p>

        @* Email *@
        <div class="field">
            <div class="ui left icon input">
                <i class="envelope icon"></i>
                @Html.TextBoxFor(m => m.Email, new { placeholder = "Email address" })
            </div>
        </div>

        @* New Password *@
        <div class="field">
            <div class="ui left icon input">
                <i class="lock icon"></i>
                @Html.PasswordFor(m => m.NewPassword, new { placeholder = "New password" })
            </div>
        </div>

        @* New Password Confirmation *@
        <div class="field">
            <div class="ui left icon input">
                <i class="lock icon"></i>
                @Html.PasswordFor(m => m.ConfirmPassword, new { placeholder = "Confirm password" })
            </div>
        </div>

        @* Anti-forgery token *@
        @Html.AntiForgeryToken()
        
        @* Token *@
        @Html.HiddenFor(m => m.ResetToken)

        @* Submit button *@
        <button class="ui fluid large blue button" type="submit">Reset</button>
    </div>
</form>