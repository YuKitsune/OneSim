// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OneSim.Traffic.Persistence;

namespace OneSim.Traffic.Persistence.Migrations.TrafficDb
{
    [DbContext(typeof(TrafficDbContext))]
    [Migration("20191227114332_CreateStatusSchema")]
    partial class CreateStatusSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("OneSim.Traffic.Domain.Entities.AirTrafficController", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Atis")
                        .HasColumnType("text");

                    b.Property<string>("Callsign")
                        .HasColumnType("text");

                    b.Property<int>("FacilityType")
                        .HasColumnType("integer");

                    b.Property<string>("Frequency")
                        .HasColumnType("text");

                    b.Property<DateTime>("LogonTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NetworkId")
                        .HasColumnType("text");

                    b.Property<string>("ProtocolRevision")
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<string>("Server")
                        .HasColumnType("text");

                    b.Property<int>("VisibilityRange")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Controllers");
                });

            modelBuilder.Entity("OneSim.Traffic.Domain.Entities.FlightNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Callsign")
                        .HasColumnType("text");

                    b.Property<int?>("FlightPlanId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NetworkId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FlightPlanId");

                    b.ToTable("FlightNotifications");
                });

            modelBuilder.Entity("OneSim.Traffic.Domain.Entities.FlightPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("ActualTimeOfDeparture")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("AircraftType")
                        .HasColumnType("text");

                    b.Property<string>("AlternateIcao")
                        .HasColumnType("text");

                    b.Property<int>("Altitude")
                        .HasColumnType("integer");

                    b.Property<string>("ArrivalIcao")
                        .HasColumnType("text");

                    b.Property<string>("DepartureIcao")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EstimatedTimeOfDeparture")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FlightRules")
                        .HasColumnType("integer");

                    b.Property<TimeSpan?>("FuelOnBoard")
                        .HasColumnType("interval");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<string>("Route")
                        .HasColumnType("text");

                    b.Property<TimeSpan?>("TimeEnroute")
                        .HasColumnType("interval");

                    b.Property<string>("TrueAirSpeed")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FlightPlans");
                });

            modelBuilder.Entity("OneSim.Traffic.Domain.Entities.Pilot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Altitude")
                        .HasColumnType("integer");

                    b.Property<string>("Callsign")
                        .HasColumnType("text");

                    b.Property<int?>("FlightPlanId")
                        .HasColumnType("integer");

                    b.Property<int>("GroundSpeed")
                        .HasColumnType("integer");

                    b.Property<int>("Heading")
                        .HasColumnType("integer");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("LogonTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NetworkId")
                        .HasColumnType("text");

                    b.Property<string>("ProtocolRevision")
                        .HasColumnType("text");

                    b.Property<string>("Server")
                        .HasColumnType("text");

                    b.Property<string>("Squawk")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FlightPlanId");

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("OneSim.Traffic.Domain.Entities.Point3d", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Altitude")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<int?>("PilotId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PilotId");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("OneSim.Traffic.Domain.Entities.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("IpAddress")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NetworkIdentifier")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("OneSim.Traffic.Domain.Entities.FlightNotification", b =>
                {
                    b.HasOne("OneSim.Traffic.Domain.Entities.FlightPlan", "FlightPlan")
                        .WithMany()
                        .HasForeignKey("FlightPlanId");
                });

            modelBuilder.Entity("OneSim.Traffic.Domain.Entities.Pilot", b =>
                {
                    b.HasOne("OneSim.Traffic.Domain.Entities.FlightPlan", "FlightPlan")
                        .WithMany()
                        .HasForeignKey("FlightPlanId");
                });

            modelBuilder.Entity("OneSim.Traffic.Domain.Entities.Point3d", b =>
                {
                    b.HasOne("OneSim.Traffic.Domain.Entities.Pilot", null)
                        .WithMany("History")
                        .HasForeignKey("PilotId");
                });
#pragma warning restore 612, 618
        }
    }
}
